
# 宿主机的 ip
host_ip = "192.168.56.1"

# 控制节点，用于运行 ansible 
controller_ip = "192.168.56.9"

# 主节点的ip
master_ip = "192.168.56.10"

# 所有的集群节点
nodes = {
    "master"    => master_ip,
    "node1"     => "192.168.56.11",
}

# export VAGRANT_EXPERIMENTAL="1"
Vagrant.configure(2) do |config|
    # 要做每个虚拟机里面执行的，写字 config 里; 
    # 要在特定某虚拟机执行的，写在 config.vm.define 的 machine 里

    # 使用 Vagrant 默认的 不安全 key，而不生成独立的密钥对
    config.ssh.insert_key = false
    # 转发 SSH 代理，以便轻松地将 SSH 转移到不同的机器上
    config.ssh.forward_agent = true
    config.vm.synced_folder ".", "/vagrant"
    config.vm.synced_folder "..", "/vagrant_data"

    config.vm.provider :docker do |docker, override|
        override.vm.box = nil

        # https://github.com/rofrano/vagrant-docker-provider
        # ubuntu:jammy, Ubuntu 22.04
        docker.image = "rofrano/vagrant-provider:ubuntu"

        docker.remains_running = true
        docker.has_ssh = true
        docker.privileged = true
        docker.volumes =["/sys/fs/cgroup:/sys/fs/cgroup:rw"]
        docker.create_args = ["--cgroupns=host"]
    end
    
    config.vm.provider :virtualbox do |vb|
        # 镜像
        config.vm.box = "generic/ubuntu2210"
        vb.memory = "2048"
        vb.cpus = 2
        
    end

    # 设置上网代理，修改镜像源
    config.vm.provision :shell, before: :all, name: "set proxy", inline: <<-SHELL
        profile=/etc/profile.d/proxy.sh
        host_proxy="#{host_ip}:7890"
        # mac 下，docker 的时候不需要
        # echo "export http_proxy=http://$host_proxy https_proxy=http://$host_proxy all_proxy=sock5://$host_proxy" > $profile && . $profile && curl https://google.com
        # sed -i 's@//.*archive.ubuntu.com@//mirrors.ustc.edu.cn@g' /etc/apt/sources.list
        # curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
        cp /vagrant/kubernetes-archive-keyring.gpg /usr/share/keyrings/
        cp /vagrant/insecure_private_key /home/vagrant/ && chmod 600 /vagrant/insecure_private_key
    SHELL


    # 创建集群节点
    nodes.each do |name, ip|
        config.vm.define name do |machine|
            machine.vm.hostname = name
            machine.vm.network :private_network, ip: ip
            machine.vm.provider :virtualbox do |vb|
                vb.name = name # 在virtualbox 界面显示的名字
            end
            # 安装 docker
            machine.vm.provision :docker do |d|
            end
        end
    end

    # 控制节点
    config.vm.define :controller do |machine|
        machine.vm.hostname = :controller
        machine.vm.network :private_network, ip: controller_ip
        machine.vm.provider :virtualbox do |vb|
            vb.name = "controller"
        end
        machine.vm.provision :ansible_local do|ansible|
            ansible.playbook = "provisioning/kube-dependencies.yaml"
            ansible.inventory_path = "ansible/inventory.yaml"
            # 主机分组
            ansible.limit = :k8s
            # ansible.verbose = true
        end
        machine.vm.provision :ansible_local do|ansible|
            ansible.playbook = "provisioning/master-cluster.yaml"
            ansible.inventory_path = "ansible/inventory.yaml"
            # 主机分组
            ansible.limit = :masters
            ansible.verbose = true
        end
    end

end
